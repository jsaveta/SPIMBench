PREFIX bbcevent:<http://www.bbc.co.uk/ontologies/event/> 
PREFIX geo-pos:<http://www.w3.org/2003/01/geo/wgs84_pos#> 
PREFIX bbc:<http://www.bbc.co.uk/ontologies/bbc/> 
PREFIX time:<http://www.w3.org/2006/time#> 
PREFIX event:<http://purl.org/NET/c4dm/event.owl#> 
PREFIX music-ont:<http://purl.org/ontology/mo/> 
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX foaf:<http://xmlns.com/foaf/0.1/> 
PREFIX provenance:<http://www.bbc.co.uk/ontologies/provenance/> 
PREFIX owl:<http://www.w3.org/2002/07/owl#> 
PREFIX cms:<http://www.bbc.co.uk/ontologies/cms/> 
PREFIX news:<http://www.bbc.co.uk/ontologies/news/> 
PREFIX cnews:<http://www.bbc.co.uk/ontologies/news/cnews/> 
PREFIX cconcepts:<http://www.bbc.co.uk/ontologies/coreconcepts/> 
PREFIX dbp-prop:<http://dbpedia.org/property/> 
PREFIX geonames:<http://sws.geonames.org/> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
PREFIX domain:<http://www.bbc.co.uk/ontologies/domain/> 
PREFIX dbpedia:<http://dbpedia.org/resource/> 
PREFIX geo-ont:<http://www.geonames.org/ontology#> 
PREFIX bbc-pont:<http://purl.org/ontology/po/> 
PREFIX tagging:<http://www.bbc.co.uk/ontologies/tagging/> 
PREFIX sport:<http://www.bbc.co.uk/ontologies/sport/> 
PREFIX skosCore:<http://www.w3.org/2004/02/skos/core#> 
PREFIX dbp-ont:<http://dbpedia.org/ontology/> 
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#> 
PREFIX core:<http://www.bbc.co.uk/ontologies/coreconcepts/> 
PREFIX curric:<http://www.bbc.co.uk/ontologies/curriculum/> 
PREFIX skos:<http://www.w3.org/2004/02/skos/core#> 
PREFIX cwork:<http://www.bbc.co.uk/ontologies/creativework/> 
PREFIX fb:<http://rdf.freebase.com/ns/>

#  Query name : query2
#  Query Description : 
#  Retrieve creative works that are about or mention things that have specific properties
#  reasoning rdfs:subClassOf, rdf:type
#  join ordering: cwork:dateModified rdf:type owl:FunctionalProperty
#  join ordering: cwork:dateCreated rdf:type owl:FunctionalProperty

#  optimization: ?cWork a ?type . ?type rdfs:subClassOf cwork:CreativeWork 
#  should be eliminated since ?cWork a cwork:CreativeWork 

#  Choke Points : 
#    - join ordering based on cardinality of functional proerties cwork:dateCreated, cwork:dateModified
#      Optimizer should use an efficient cost evaluation method for choosing the optimal join tree
#    - OPTIONAL clauses (treated by query optimizer as nested sub-queries)
#      Optimizer should recognize that FILTER condition contains variables which are part of the OPTINAL clauses
#      and unlike query1 to start execution of OPTIONAL clause as soon as possible thus eliminating the intermediate results.
#    - query optimizer has the chance to recognize the triple pattern : ?cWork a ?type . ?type rdfs:subClassOf cwork:CreativeWork 
#      and eliminate first triple (?cwork a ?type .) since ?cwork is a cwork:CreativeWork


CONSTRUCT { 
  ?cWork a cwork:CreativeWork ; 
    a ?type ; 
    cwork:title ?title ; 
    cwork:dateCreated ?dateCreated ;
    cwork:dateModified ?dateModified ;
    cwork:about ?about ; 
    bbc:primaryContentOf ?pco . 
  ?pco bbc:webDocumentType ?webDocType . 
} 
WHERE { 
  ?cWork a cwork:CreativeWork ; 
    a ?type ; 
    cwork:title ?title .  
  ?type rdfs:subClassOf cwork:CreativeWork . 
  OPTIONAL { ?cWork cwork:dateCreated ?dateCreated . }
  OPTIONAL { ?cWork cwork:dateModified ?dateModified . }
  OPTIONAL { ?cWork cwork:about ?about .} 
  OPTIONAL { 
    ?cWork bbc:primaryContentOf ?pco . 
    ?pco bbc:webDocumentType ?webDocType . 
  } 
  FILTER (?cWork = {{{cwUri}}})
}