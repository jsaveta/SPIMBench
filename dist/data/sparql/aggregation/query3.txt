PREFIX bbcevent:<http://www.bbc.co.uk/ontologies/event/> 
PREFIX geo-pos:<http://www.w3.org/2003/01/geo/wgs84_pos#> 
PREFIX bbc:<http://www.bbc.co.uk/ontologies/bbc/> 
PREFIX time:<http://www.w3.org/2006/time#> 
PREFIX event:<http://purl.org/NET/c4dm/event.owl#> 
PREFIX music-ont:<http://purl.org/ontology/mo/> 
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX foaf:<http://xmlns.com/foaf/0.1/> 
PREFIX provenance:<http://www.bbc.co.uk/ontologies/provenance/> 
PREFIX owl:<http://www.w3.org/2002/07/owl#> 
PREFIX cms:<http://www.bbc.co.uk/ontologies/cms/> 
PREFIX news:<http://www.bbc.co.uk/ontologies/news/> 
PREFIX cnews:<http://www.bbc.co.uk/ontologies/news/cnews/> 
PREFIX cconcepts:<http://www.bbc.co.uk/ontologies/coreconcepts/> 
PREFIX dbp-prop:<http://dbpedia.org/property/> 
PREFIX geonames:<http://sws.geonames.org/> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
PREFIX domain:<http://www.bbc.co.uk/ontologies/domain/> 
PREFIX dbpedia:<http://dbpedia.org/resource/> 
PREFIX geo-ont:<http://www.geonames.org/ontology#> 
PREFIX bbc-pont:<http://purl.org/ontology/po/> 
PREFIX tagging:<http://www.bbc.co.uk/ontologies/tagging/> 
PREFIX sport:<http://www.bbc.co.uk/ontologies/sport/> 
PREFIX skosCore:<http://www.w3.org/2004/02/skos/core#> 
PREFIX dbp-ont:<http://dbpedia.org/ontology/> 
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#> 
PREFIX core:<http://www.bbc.co.uk/ontologies/coreconcepts/> 
PREFIX curric:<http://www.bbc.co.uk/ontologies/curriculum/> 
PREFIX skos:<http://www.w3.org/2004/02/skos/core#> 
PREFIX cwork:<http://www.bbc.co.uk/ontologies/creativework/> 
PREFIX fb:<http://rdf.freebase.com/ns/>

#  Query name : query3
#  Query Description : 
#  Describes all creative works about a topic with certain fixed properties and order them by creation date

#  Choke Points : 
#    - UNIONS - optimizer should execute the UNIONs in terms or in parallel
#    - OPTIONAL clauses (treated by query optimizer as nested sub-queries)
#      Optimizer should recognize that FILTER condition contains variables which are part of the OPTINAL clauses
#      and start execution of OPTIONAL clause as soon as possible thus eliminating the intermediate results.
#    - Optimizer should be able to split the FILTER conditions into conjunction of conditions and
#      start their execution as soon as possible thus eliminating intermediate results
#    - Optimizer could consider the possibility to choose a query plan that would facilitate the ordering (ORDER BY) of result

DESCRIBE ?creativework
WHERE {
  {
    SELECT DISTINCT ?creativework
    {
      ?creativework cwork:dateCreated ?created .
      ?creativework cwork:about {{{cwAboutUri}}} .
      
      {
        { ?creativework cwork:primaryFormat cwork:TextualFormat . }
        UNION
        { ?creativework cwork:primaryFormat cwork:InteractiveFormat . }
        UNION
        { ?creativework cwork:primaryFormat cwork:PictureGalleryFormat . }
      }
          # formats
      {
        { ?creativework a cwork:NewsItem . }
        UNION
        { ?creativework a cwork:BlogPost . }
      }
      OPTIONAL { ?creativework cwork:audience ?audience } .
      FILTER (!BOUND(?audience) || ?audience = {{{cwAudience}}}) .
    }
  }
}
ORDER BY DESC( xsd:dateTime(str(?created)) )
LIMIT {{{randomLimit}}}